/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from "./routes/__root";
import { Route as ContactImport } from "./routes/contact";
import { Route as IndexImport } from "./routes/index";
import { Route as ContactCreateIndexImport } from "./routes/contact/create/index";
import { Route as hiddenFolderContactIdImport } from "./routes/(hidden-folder)/contact/$id";

// Create/Update Routes

const ContactRoute = ContactImport.update({
  id: "/contact",
  path: "/contact",
  getParentRoute: () => rootRoute,
} as any);

const IndexRoute = IndexImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => rootRoute,
} as any);

const ContactCreateIndexRoute = ContactCreateIndexImport.update({
  id: "/create/",
  path: "/create/",
  getParentRoute: () => ContactRoute,
} as any);

const hiddenFolderContactIdRoute = hiddenFolderContactIdImport.update({
  id: "/(hidden-folder)/contact/$id",
  path: "/contact/$id",
  getParentRoute: () => rootRoute,
} as any);

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/": {
      id: "/";
      path: "/";
      fullPath: "/";
      preLoaderRoute: typeof IndexImport;
      parentRoute: typeof rootRoute;
    };
    "/contact": {
      id: "/contact";
      path: "/contact";
      fullPath: "/contact";
      preLoaderRoute: typeof ContactImport;
      parentRoute: typeof rootRoute;
    };
    "/(hidden-folder)/contact/$id": {
      id: "/(hidden-folder)/contact/$id";
      path: "/contact/$id";
      fullPath: "/contact/$id";
      preLoaderRoute: typeof hiddenFolderContactIdImport;
      parentRoute: typeof rootRoute;
    };
    "/contact/create/": {
      id: "/contact/create/";
      path: "/create";
      fullPath: "/contact/create";
      preLoaderRoute: typeof ContactCreateIndexImport;
      parentRoute: typeof ContactImport;
    };
  }
}

// Create and export the route tree

interface ContactRouteChildren {
  ContactCreateIndexRoute: typeof ContactCreateIndexRoute;
}

const ContactRouteChildren: ContactRouteChildren = {
  ContactCreateIndexRoute: ContactCreateIndexRoute,
};

const ContactRouteWithChildren =
  ContactRoute._addFileChildren(ContactRouteChildren);

export interface FileRoutesByFullPath {
  "/": typeof IndexRoute;
  "/contact": typeof ContactRouteWithChildren;
  "/contact/$id": typeof hiddenFolderContactIdRoute;
  "/contact/create": typeof ContactCreateIndexRoute;
}

export interface FileRoutesByTo {
  "/": typeof IndexRoute;
  "/contact": typeof ContactRouteWithChildren;
  "/contact/$id": typeof hiddenFolderContactIdRoute;
  "/contact/create": typeof ContactCreateIndexRoute;
}

export interface FileRoutesById {
  __root__: typeof rootRoute;
  "/": typeof IndexRoute;
  "/contact": typeof ContactRouteWithChildren;
  "/(hidden-folder)/contact/$id": typeof hiddenFolderContactIdRoute;
  "/contact/create/": typeof ContactCreateIndexRoute;
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths: "/" | "/contact" | "/contact/$id" | "/contact/create";
  fileRoutesByTo: FileRoutesByTo;
  to: "/" | "/contact" | "/contact/$id" | "/contact/create";
  id:
    | "__root__"
    | "/"
    | "/contact"
    | "/(hidden-folder)/contact/$id"
    | "/contact/create/";
  fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute;
  ContactRoute: typeof ContactRouteWithChildren;
  hiddenFolderContactIdRoute: typeof hiddenFolderContactIdRoute;
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ContactRoute: ContactRouteWithChildren,
  hiddenFolderContactIdRoute: hiddenFolderContactIdRoute,
};

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/contact",
        "/(hidden-folder)/contact/$id"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/contact": {
      "filePath": "contact.tsx",
      "children": [
        "/contact/create/"
      ]
    },
    "/(hidden-folder)/contact/$id": {
      "filePath": "(hidden-folder)/contact/$id.tsx"
    },
    "/contact/create/": {
      "filePath": "contact/create/index.tsx",
      "parent": "/contact"
    }
  }
}
ROUTE_MANIFEST_END */
